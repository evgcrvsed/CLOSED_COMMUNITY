import os, time
from aiogram import Router, F, Bot, types
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, BotCommand
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode
from aiogram.types.input_file import FSInputFile

from main import db, bot_main
from dotenv import load_dotenv
load_dotenv()

router = Router()


@router.callback_query(F.data == 'start')
@router.message(Command("start"))
async def start(clb) -> None:
    if type(clb) is Message:
        if str(clb.chat.id)[0] == '-':
            print('–° –≥—Ä—É–ø–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–µ')
            return

    if type(clb) is CallbackQuery:
        db.add_user(user_telegram_id=clb.message.chat.id)
    elif type(clb) is Message:
        db.add_user(user_telegram_id=clb.chat.id)

    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(text='üíµ –¢–∞—Ä–∏—Ñ—ã', callback_data='tariffs_main'))
    builder.row(InlineKeyboardButton(text='‚è≥ –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', callback_data='my_subscribe_info'))
    builder.row(InlineKeyboardButton(text='üîé –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ', callback_data='about_us'))

    text = """
–ü—Ä–∏–≤–µ—Ç–∏–∫, –º–æ—è –¥–æ—Ä–æ–≥–∞—è, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ø–∞—Å—Ç—å –≤ –º–æ—ë –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏  ‚ÄúCLOSED COMMUNITY‚Äù

–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç –≤ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–æ–º—å—é–Ω–∏—Ç–∏?
‚ú¶ [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://t.me/evgcursed)

_–ß–∏—Ç–∞–µ—à—å_ \- _*–ø–æ–≤—Ç–æ—Ä—è–µ—à—å*_ \- __*–ø–æ–ª—É—á–∞–µ—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç*__ 

–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –º–æ—ë –∫–æ–º—å—é–Ω–∏—Ç–∏ –∏ —Ä–∞–∑ –∏ –Ω–∞ –≤—Å–µ–≥–¥–∞ –∑–∞–±—ã—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –ø–æ–ª–æ–º –∏ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ:
"""

    if type(clb) is CallbackQuery:
        message = clb.bot.edit_message_reply_markup
        await message(
            chat_id=clb.message.chat.id,
            message_id=clb.message.message_id,
            reply_markup=builder.as_markup()
        )

        await clb.message.edit_caption(
            caption=text,
            photo=FSInputFile('data/images/image_start.jpg'),
            reply_markup=builder.as_markup(),
            parse_mode=ParseMode.MARKDOWN_V2
        )
    elif type(clb) is Message:
        previous_message = clb
        clb: Message = clb

        await clb.answer_photo(
            caption=text,
            photo=FSInputFile('data/images/image_start.jpg'),
            reply_markup=builder.as_markup(),
            parse_mode=ParseMode.MARKDOWN_V2
        )

        await previous_message.delete()


@router.callback_query(F.data == 'check_subscribe')
async def check_subscribe(clb) -> None:
    if not db.get_user_group_joined(user_telegram_id=clb.message.chat.id):
        await bot_main.answer_callback_query(callback_query_id=clb.id, text='–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å', show_alert=True)
        return

    # await profile_delete(clb)
