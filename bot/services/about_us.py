from aiogram import Router, F, types
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData
from aiogram.types.web_app_info import WebAppInfo
from aiogram.enums import ParseMode
from dotenv import load_dotenv
load_dotenv()

from main import db

router = Router()


@router.callback_query(F.data == 'about_us')
async def about_us(clb) -> None:
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='start'))

    text = """
–ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª CLOSED COMMUNITY ‚Äî —ç—Ç–æ –º–æ—ë –¥–∏—Ç—è, –º–æ—ë —Ç–≤–æ—Ä–µ–Ω–∏–µ, —Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –æ–ø–æ—Ä—É –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ –ª—é–±–æ–π –∂–µ–Ω—â–∏–Ω–∞, —Ç–æ—Ç –Ω–∞–±–æ—Ä –∑–Ω–∞–Ω–∏–π –∏ —Ç–æ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤ –∫–æ–º–ø–ª–µ–∫—Å–µ –±—É–¥—É—Ç —Å–ø–æ—Å–æ–±–Ω—ã –∑–∞–º–µ–Ω–∏—Ç—å –º–Ω–æ–≥–∏–º —Ä–µ–±—è—Ç–∞–º –º–æ–¥–µ–ª—å –º–∞–º—ã\. –ß–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —É –Ω–∏—Ö –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª–æ\. 

–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —à–∫–æ–ª–∞ –∂–µ–Ω—Å–∫–æ–≥–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è, –ª—É—á—à–∞—è –∏–∑ —à–∫–æ–ª, –≤–µ–¥—å —Ç–æ–ª—å–∫–æ –≤ –Ω–µ–π –µ—Å—Ç—å –®–ö–û–õ–ê –ñ–ò–ó–ù–ò\! 

–ó–∞—á–µ–º –º–Ω–µ —ç—Ç–æ –≤—Å—ë\?

–î–µ–Ω—å–≥–∏ \= –∑–∞—Ä–∞–±–æ—Ç–æ–∫ \+ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ —Ä–∞—Å—Ç–∏\.

–í –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å —è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –∑–∞–ø—É—Å–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –∫–∞–∫ –Ω–∞—à–µ —Ä–∞–∫–µ—Ç–Ω–æ–µ —Ç–æ–ø–ª–∏–≤–æ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ —Å—Ç—Ä–∞—Ç–æ—Å—Ñ–µ—Ä—É\. –Ø —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å –õ–£–ß–®–ï–ï –∏ —Å–∞–º–æ–µ –ú–ê–°–®–¢–ê–ë–ù–û–ï —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –∞ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã –æ–≥—Ä–æ–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏\. –ù–µ—Å–∫–æ–ª—å–∫–æ –º–∏–ª–ª–∏–æ–Ω–æ–≤ —É–∂–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ, –Ω–æ —ç—Ç–æ–≥–æ –º–∞–ª–æ\. 90% –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º–Ω–µ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª, —è –ø–µ—Ä–≤—ã–µ –ø–æ–ª –≥–æ–¥–∞\-–≥–æ–¥ –±—É–¥—É —Ä–µ–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ä–µ–∫–ª–∞–º—É, —á—Ç–æ–±—ã —Ç–∞–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –∫–∞–∫ ¬´–∞–ª–µ–Ω–∏–∑–º¬ª –±—ã–ª–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ –≤ –Ω–∞—à–µ–º –º–∏—Ä–µ –∏ –º—É–∂—á–∏–Ω—ã –≤–µ—Ä–Ω—É–ª–∏ —Å–µ–±–µ –ø—Ä–µ–∂–Ω—é—é —Å–∏–ª—É –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å\.

–•–û–ß–ï–®–¨ –ö –ù–ê–ú\? –ñ–ú–ò –í–ù–ò–ó–£ –ù–ê –ö–ù–û–ü–ö–£ ¬´–¢–ê–†–ò–§–´¬ª –ò –ó–ê–õ–ï–¢–ê–ô, –ú–´ –¢–ï–ë–Ø –ñ–î–ï–ú üî•
"""

    if type(clb) is CallbackQuery:
        message = clb.bot.edit_message_reply_markup
        await message(
            chat_id=clb.message.chat.id,
            message_id=clb.message.message_id,
            reply_markup=builder.as_markup()
        )

        await clb.message.edit_caption(
            caption=text,
            reply_markup=builder.as_markup(),
            parse_mode=ParseMode.MARKDOWN_V2
        )
    elif type(clb) is Message:
        previous_message = clb

        clb: Message = clb

        await clb.answer(
            text=text,
            reply_markup=builder.as_markup(),
            parse_mode=ParseMode.MARKDOWN_V2
        )

        await previous_message.delete()
